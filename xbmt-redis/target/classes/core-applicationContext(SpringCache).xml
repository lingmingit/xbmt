<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd">
        
     
     <!-- class annotation related... end -->
	<context:annotation-config />   
     <!-- class annotation related... start -->
	<context:component-scan base-package="com.xbmt.**.service" />
	<!-- 加载 properties配置文件 -->
	<context:property-placeholder  location="classpath:/properties/*.properties"  />  
	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->  
    <cache:annotation-driven cache-manager="cacheManager" />  
	
	<!-- c3p0 数据源 的配置  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true"/>
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间，Default: 3 -->
		<property name="initialPoolSize" value="${cpool.minPoolSize}"/>
		<!--连接池中保留的最小连接数-->
		<property name="minPoolSize" value="${cpool.minPoolSize}"/>
		<!--连接池中保留的最大连接数，Default: 15 -->
		<property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
		<!--最大空闲时间,60秒内未使用则连接被丢弃，若为0则永不丢弃，Default: 0 -->
		<property name="maxIdleTime" value="${cpool.maxIdleTime}"/>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数，Default: 3 -->
		<property name="acquireIncrement" value="${cpool.acquireIncrement}"/>
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>
		
		<property name="maxStatements" value="${cpool.maxStatements}" />
		<property name="testConnectionOnCheckout" value="${cpool.testConnectionOnCheckout}" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" /><!-- /WEB-INF/classes/mybatis-config.xml -->
		<!-- mapper和resultmap配置路径 --> 
        <property name="mapperLocations">
            <list>
                <!-- 表示在com.bluesky目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 
                <value>classpath:com/bluesky/framework/mybatis/mybatis-common.xml</value> 
                <value>classpath:com/bluesky/**/resultmap/*-resultmap.xml</value>
                <value>classpath:com/bluesky/**/mapper/*-mapper.xml</value>
                <value>classpath:com/bluesky/**/mapper/**/*-mapper.xml</value>-->
            </list>
        </property>
        <!-- 配置 mybatis 插件
        <property name="plugins"></property> -->
	</bean>
	 <!-- MyBatis 动态实现  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 对Dao 接口动态实现，需要知道接口在哪  -->
        <property name="basePackage" value="com.xbmt.**.mapper"/>
    </bean>
    <!-- mybatis related... end -->

	
	
	<!-- transaction config related... start -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- transaction config related... end -->
	
	
	<!--redis config begin -->
	<!-- jedis 配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
          <property name="maxIdle" value="${redis.maxIdle}" />
          <property name="maxWaitMillis" value="${redis.maxWait}" />
          <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean >
    
    <!-- redis服务器中心 -->
    <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
          <property name="poolConfig" ref="poolConfig" />
          <property name="port" value="${redis.port}" />
          <property name="hostName" value="${redis.host}" />
          <!-- <property name="password" value="${redis.password}" /> -->
          <property name="timeout" value="${redis.timeout}" ></property>
    </bean >
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
          <property name="connectionFactory" ref="connectionFactory" />
          <property name="keySerializer" >
              <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
          </property>
          <property name="valueSerializer" >
              <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" >
              </bean>
          </property>
    </bean>
    <bean id="connectionFactory02"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
          <property name="poolConfig" ref="poolConfig" />
          <property name="port" value="${redis.port}" />
          <property name="hostName" value="${redis.host}" />
          <!-- <property name="password" value="${redis.password}" /> -->
          <property name="timeout" value="${redis.timeout}" ></property>
    </bean >
    <bean id="redisTemplate02" class="org.springframework.data.redis.core.RedisTemplate" >
          <property name="connectionFactory" ref="connectionFactory02" />
          <property name="keySerializer" >
              <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
          </property>
          <property name="valueSerializer" >
              <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" >
              </bean>
          </property>
    </bean>
      <!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                <bean class="com.xbmt.framework.redis.cache.RedisCache2">  
                    <property name="redisTemplate" ref="redisTemplate" />  
                    <property name="name" value="default"/>  
                </bean>  
                <bean class="com.xbmt.framework.redis.cache.RedisCache2">  
                    <property name="redisTemplate" ref="redisTemplate02" />  
                    <property name="name" value="commonCache"/>  
                </bean>  
            </set>  
        </property>  
    </bean>  
    
  	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	<!--redis config end -->
	
</beans>