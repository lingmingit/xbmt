<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">
		
	<!-- 
	第三种、【spring-security + 自定义token算法  用户认证 案例，测试成功 2016-07-14】
    http://www.jianshu.com/p/1b29534acac8 Spring Security实践（二）：简单认证的实现
          相关后台代码：
	com.xbmt.api.controller.LoginAuth3Controller
	com.xbmt.auth3.**.java
	com.xbmt.auth3.AuthenticationTokenProcessingFilter
	com.xbmt.auth3.UnauthorizedEntryPoint
	com.xbmt.auth3.TokenUtils
	前台代码：LoginCtrl3、UserService3、Auth、UserInterceptor3
	 login.html、app.js 等
	  security-ns(自定义token算法认证).xml
	 -->
		
		
	<security:http pattern="/**/*.png" security="none" />
	<security:http pattern="/**/*.gif" security="none" />
	<security:http pattern="/**/*.jpg" security="none" />
	<security:http pattern="/**/*.css" security="none" />
	<security:http pattern="/**/*.js" security="none" />
	<security:http pattern="/**/*.ico" security="none" />
	<security:http pattern="/**/*.eot" security="none" />
	<security:http pattern="/**/*.ttf" security="none" />
	<security:http pattern="/**/*.woff" security="none" />
	
	
	<!-- 后台登录验证码 -->
	<security:http pattern="/captcha.svl"  security="none"/>
		
	<security:http pattern="/test/**" security="none"/>
	<!-- 上传的文件  不需要安全认证-->
	<security:http pattern="/uploadDir/**" security="none"/>
	<!-- 前台  不需要安全认证 -->
	<security:http pattern="/front/**" security="none"/>
	<security:http pattern="/html/**" security="none"/>
	<security:http pattern="/swf/**" security="none"/>
	
	<security:http pattern="/app/**" security="none"/>
	
	<security:http pattern="/api/auth3/login" security="none" />
	
	<!-- RESTful API接口  安全配置-->
	<bean id="userDetailsService" class="com.xbmt.auth.UserDetailServiceImpl">
		<property name="userService" ref="sys.userService" />
	</bean>
	
	
	<!-- General Configuration-->
	<security:http auto-config="false"
               entry-point-ref="unauthorizedEntryPoint"
               authentication-manager-ref="authenticationManager">
            
          <security:intercept-url pattern="/api/**" access="ROLE_USER" /> 
          <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
    </security:http>
   <!--  对入口和filter的定义同样在spring-security.xml中：-->
   <bean id="unauthorizedEntryPoint" class="com.xbmt.auth3.UnauthorizedEntryPoint" />
   
  <bean class="com.xbmt.auth3.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
    <constructor-arg ref="userDetailsService" />
  </bean>
	<security:authentication-manager id="authenticationManager">
	    <security:authentication-provider user-service-ref="userDetailsService">
	    </security:authentication-provider>
	</security:authentication-manager>
	
	
	<!-- <security:authentication-manager>
	    <security:authentication-provider>
	        <security:jdbc-user-service data-source-ref="dataSource"/>
	    </security:authentication-provider>
	</security:authentication-manager> -->
	

	
</beans>
